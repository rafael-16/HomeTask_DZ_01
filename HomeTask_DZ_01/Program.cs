
/*  
 *  DZ_01
 * Задача:
Попрактикуйтесь в создании переменных, объявить 10 переменных разных типов.
Напоминание: переменные именуются с маленькой буквы, если название состоит из нескольких слов, то комбинируем их следующим образом - названиеПеременной.
Также имя всегда должно отражать суть того, что хранит переменная.  */

int numInt;        //  хранит целое число от -2147483648 до 2147483647 и занимает 4 байта. Представлен системным типом System.Int32
float numFloat;    //  хранит число с плавающей точкой от -3.4*1038 до 3.4*1038 и занимает 4 байта. Представлен системным типом System.Single
double numDouble;  //  хранит число с плавающей точкой от ±5.0*10-324 до ±1.7*10308 и занимает 8 байта. Представлен системным типом System.Double
long numLong;      //  хранит целое число от –9 223 372 036 854 775 808 до 9 223 372 036 854 775 807 и занимает 8 байт. Представлен системным типом System.Int64
short numShort;    //  хранит целое число от -32768 до 32767 и занимает 2 байта. Представлен системным типом System.Int16
uint numUint;      //  хранит целое число от 0 до 4294967295 и занимает 4 байта. Представлен системным типом System.UInt32
string strString;  //  хранит набор символов Unicode. Представлен системным типом System.String
char sumbChar;     //  хранит одиночный символ в кодировке Unicode и занимает 2 байта. Представлен системным типом System.Char
bool markBool;     //  хранит значение true или false (логические литералы). Представлен системным типом System.Boolean
object anyType;    //  может хранить значение любого типа данных и занимает 4 байта на 32-разрядной платформе и 8 байт на 64-разрядной платформе. Представлен системным типом System.Object

/*
 * Задача:
int a = 10;
int b = 38 * 17;
int c = (31 – 5 * a) / b;
Console.WriteLine(c);

ВАЖНО!!! Не запускать код и попытаться подумать головой

 */
int a = 10;
int b = 38 * 17;
int c = (31 - 5 * a) / b;
Console.WriteLine(c);
Console.WriteLine("\n*   *   *   *   *\n");

/*
 * Задача:
На экране в специальной зоне выводятся картинки, по 3 в ряд. Всего у пользователя в альбоме 52 картинки. Код должен вывести, 
сколько полностью заполненных рядов можно будет вывести, и сколько картинок будет сверх меры.

В качестве решения ожидается объявленные переменные с необходимыми значениями и вывод необходимых данных основываясь на значениях переменных.
 */

int number_of_images = 51;
int number_in_a_row = 3;
int number_of_rows;

Console.WriteLine($"В альбоме {number_of_images} картинок.");
Console.WriteLine($"На экране по {number_in_a_row} штуки в ряду.");
number_of_rows = number_of_images/number_in_a_row;

int incomplete_row = number_of_images % number_in_a_row;

if (incomplete_row!=0)
{
    Console.WriteLine($"Всего на экране {number_of_rows} полных рядов\n" +
        $"и один неполный ряд с {incomplete_row} картинкой(ми)");
}
else
{
    Console.WriteLine($"Всего на экране {number_of_rows} полных рядов.");
}
